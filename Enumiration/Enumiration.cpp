#include <iostream>
#include <locale.h>

using namespace std;

/* Добавим удобство для программиста в switch и не только.

Перечисление - это набор именованных целочисленных констант, который помогает сохранить в одном месте несколько целочисленных констант. Например, сколько дней в месяце,
месяцев в году, студентов в группе...
Каждое имя константы запомнить сложно, след, перечисление дает нам возможность собрать в единое целое набор целочисленных констант, дать этому единому целому своё имя,
a дальше по этому имени обращаться к этим константам когда это нужно и использовать их в нужный момент.

(!) Данная конструкция работает только с целочисленными константами!

Напишем программу определения дня недели. Введем порядковый номер дня недели, и программа выдаст день недели. */

int main()
{
    setlocale(LC_ALL, "rus");
    cout << "-------------------------------------------------Программа для определения дня недели!-----------------------------------------------------------" << endl;

    int Day = 0;                                              // переменная, хранящая день недели

    /* Создадим перечисление целочисленных констант. Пишется ключевое слово Enum, далее пишется название нашего перечисления, ставим фиг.скобочки. Внутри фиг.скобочек
    мы перечисляем имена целочисленных констант и их значения! Константы обязательно инициализируются при создании! В конце фиг.скобочек мы обязательно ставим ';' */

    /*
    enum DaysOfWeek
    {
        Monday, Tuesday, Wednesday=8, Thursday, Friday, Saturday=-13, Sunday
    };
    cout << Sunday << endl;                                   // обращение к константе по имени
    */

    /* Преимущества использования перечисления:
    Нет необходимости задавать значение каждой константе, созданной в перечислении, и притом мы также можем работать с ними по их имени как и со стандартными. При этом
    в них будет автоматически начальное значение 0, увеличивающееся порядково по количеству констант. Если вдруг нам нужна собственная инициализация какой-либо констан-
    ты в перечислении, то нужно не забывать, что все последующие константы будут увеличиваться порядково от этой заданной нами константы.

    Отсюда есть два способа воздействия на значения константы, задать вручную или же поставить в начало перечисления константу - "утку", которая заберет на себя ноль и
    последующие константы будут нужного порядкового номера.

    (!) В перечислении могут быть константы с одинаковыми именами и с одинаковыми значениями. Но это очень нехорошо! Такие константы мы не сможем использовать, например
    в switch, т.к. switch должен иметь разные значения каждого кейса!

    Принцип работы с перечислением:
    Пишем cout<< потом название нашего перечисление, а потом два двоеточия '::' и выбираем из предложенного списка нужную константу и нажимаем Tab. В предложенном спис-
    ке наши константы располагаются в алфавитном порядке и со значениями. Достаточно просто подвести к ним мышку. */

    enum DaysOfWeek
    {
        Error, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday
    };
    cout << Sunday << endl;

    cout << DaysOfWeek::Saturday << endl;                     // обращение к константе по имени с указанием ее принадлежности к перечислению DaysOfWeek

    // Перечисление нам также нужно для наглядности и понимания кода! Перечисление очень хорошо взаимодействует с конструкцией switch.

    cout << "Введите номер дня недели: "; cin >> Day;
    switch (Day)
    {
    case DaysOfWeek::Monday:                                  // посмотри с сравни с обычным switch, чтобы проникнуться разницей
        cout << "Это понедельник!" << endl;
        break;
    default:
        cout << "Такой день недели не существует!" << endl;
        break;
    case DaysOfWeek::Tuesday:
        cout << "Это вторник!" << endl;
        break;
    case DaysOfWeek::Wednesday:
        cout << "Это среда!" << endl;
        break;
    case DaysOfWeek::Thursday:
        cout << "Это четверг!" << endl;
        break;
    case DaysOfWeek::Friday:
        cout << "Это пятница!" << endl;
        break;
    case DaysOfWeek::Saturday:
        cout << "Это суббота!" << endl;
        break;
    case DaysOfWeek::Sunday:
        cout << "Это воскресенье!" << endl;
        break;
    }
}